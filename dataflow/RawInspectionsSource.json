{
	"name": "RawInspectionsSource",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "adls_ds",
						"type": "DatasetReference"
					},
					"name": "sourceDelimetedText"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Snowflake",
						"type": "DatasetReference"
					},
					"name": "sinkSNF"
				}
			],
			"transformations": [
				{
					"name": "CleanColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Inspection ID} as string,",
				"          {DBA Name} as string,",
				"          {AKA Name} as string,",
				"          {License #} as string,",
				"          {Facility Type} as string,",
				"          Risk as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          Zip as string,",
				"          {Inspection Date} as string,",
				"          {Inspection Type} as string,",
				"          Results as string,",
				"          Violations as string,",
				"          Latitude as string,",
				"          Longitude as double,",
				"          {{Location} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceDelimetedText",
				"sourceDelimetedText derive(Results = replace(replace(Results, '\\t', ' '), '\\n', ''),",
				"          Violations = replace(replace(Violations, '\\t', ' '), '\\n', ''),",
				"          DI_JOB_ID = ERROR_FUNCTION('')) ~> CleanColumns",
				"CleanColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true) ~> sinkSNF"
			]
		}
	}
}